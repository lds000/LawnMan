<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <DropShadowEffect x:Key="BoiseStateOrangeShadow"
                  Color="#FFEA6A1A"
                  BlurRadius="8"
                  ShadowDepth="2"
                  Direction="315"
                  Opacity="0.3"/>

    <!-- Button Style -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource AccentBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToggleButton Style -->
    <Style TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6">
                        <!-- Explicit TextBlock to support Foreground binding -->
                        <TextBlock Text="{TemplateBinding Content}"
                               FontWeight="{TemplateBinding FontWeight}"
                               FontSize="{TemplateBinding FontSize}"
                               Foreground="{TemplateBinding Foreground}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Checked State -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonCheckedColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
                        </Trigger>

                        <!-- Unchecked State -->
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ButtonUncheckedColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBox Style -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource InputBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Padding" Value="4" />
    </Style>

    <!-- TextBlock Style -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
    </Style>


    <ControlTemplate x:Key="EmptyButtonTemplate" TargetType="RepeatButton">
        <Border x:Name="border"
            Background="Transparent">
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBackground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonHoverBackground}" />
                <Setter TargetName="border" Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Slider Style (basic) -->
    <Style TargetType="Slider" x:Key="TouchSliderStyle">
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <Rectangle Height="4" Fill="#4F7CD6" VerticalAlignment="Center" /> <!-- Light Boise Blue -->
                        <Track x:Name="PART_Track" Focusable="False">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton BorderThickness="0" Template="{StaticResource EmptyButtonTemplate}" Command="Slider.DecreaseLarge" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Width="30" Height="30">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Ellipse Fill="#FF6600" Stroke="#0033A0" StrokeThickness="2" /> <!-- Boise Orange fill, Boise Blue border -->
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton BorderThickness="0" Template="{StaticResource EmptyButtonTemplate}" Command="Slider.IncreaseLarge" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabControl">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
    </Style>
    
    <Style x:Key="DarkComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
        <Setter Property="Background" Value="{DynamicResource InputBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
                    <Setter Property="Background" Value="{DynamicResource InputBackground}" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ComboBoxItemHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ComboBoxItemSelectedBackground}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource InputBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                  Grid.Column="2"
                                  Focusable="False"
                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press"
                                  Background="{TemplateBinding Background}"
                                  BorderThickness="0"
                                  HorizontalAlignment="Right">
                            <Path VerticalAlignment="Center" HorizontalAlignment="Center"
                              Data="M 0 0 L 4 4 L 8 0 Z"
                              Fill="{DynamicResource PrimaryText}" Width="10" Height="6" />
                        </ToggleButton>

                        <ContentPresenter Name="ContentSite"
                                      IsHitTestVisible="False"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Margin="6,0,30,0"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left" />

                        <Popup Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                            <Grid MaxHeight="300"
                              SnapsToDevicePixels="True"
                              Background="{DynamicResource InputBackground}"
                              MinWidth="{TemplateBinding ActualWidth}">
                                <ScrollViewer Margin="4,6,4,6"
                                          SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledText}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="10,4"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="6"
                        SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SecondaryButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryButtonBackground}" />
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="10,4"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="6"
                        SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecondaryButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecondaryButtonPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="6"
                        Padding="10,4"
                        Margin="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="{DynamicResource TabItemBackground}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkTabItemStyle" TargetType="TabItem">
        <Setter Property="Header" Value="{Binding SetName}" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{DynamicResource TabItemBackground}" />
        <Setter Property="Padding" Value="12,4"/>
        <Setter Property="Margin" Value="4,0"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Bd"
                        Background="{TemplateBinding Background}"
                        CornerRadius="6,6,0,0"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentBrush}" />
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CircleCheckboxStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <!-- Outer circle -->
                        <Ellipse x:Name="Circle"
                             Stroke="{DynamicResource ButtonCheckedColor}" 
                             StrokeThickness="2"
                             Fill="#01FFFFFF" 
                            Width="24"
                             Height="24" />
                            
                            <Path x:Name="CheckMark"
                          Data="M 6 12 L 11 17 L 18 7"
                          Stroke="{DynamicResource ButtonUncheckedColor}"
                          StrokeThickness="2.5"
                          StrokeEndLineCap="Round"
                          StrokeStartLineCap="Round"
                          Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Circle" Property="Fill" Value="{DynamicResource ButtonCheckedColor}" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Circle" Property="Fill" Value="#01FFFFFF"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Circle" Property="StrokeThickness" Value="3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>
    <!-- 
    NavButtonStyle: Large, touch-friendly, Boise State themed -->
    <Style x:Key="NavButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource AccentBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="8,8,8,0" />
        <Setter Property="Padding" Value="12,16" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="20" Effect="{StaticResource BoiseStateOrangeShadow}">
                        <TextBlock Text="{TemplateBinding Content}"
                               Foreground="{TemplateBinding Foreground}"
                               FontSize="{TemplateBinding FontSize}"
                               FontWeight="{TemplateBinding FontWeight}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource NavButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource NavButtonPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Manual Run Button Style -->
    <Style x:Key="ManualRunButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource AccentBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="Padding" Value="12,12" />
        <Setter Property="Margin" Value="8,8,8,0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Stop All Button Style -->
    <Style x:Key="StopAllButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ErrorRed}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="Padding" Value="12,8" />
        <Setter Property="Margin" Value="8,8,8,0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Card Border Style -->
    <Style x:Key="CardBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource CardBackground}" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="Padding" Value="16" />
        <Setter Property="Effect" Value="{StaticResource BoiseStateOrangeShadow}" />
    </Style>

    <!-- Boise State Themed ListBox Style -->
    <Style x:Key="BoiseStateListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="{DynamicResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ErrorRed}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Margin" Value="8,8,8,0" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="Padding" Value="8,4" />
                    <Setter Property="Margin" Value="2,2,2,0" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border x:Name="Bd"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="6"
                                        SnapsToDevicePixels="True">
                                    <ContentPresenter HorizontalAlignment="Left"
                                                      VerticalAlignment="Center"
                                                      Margin="4,0,0,0"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentBrush}" />
                                        <Setter Property="Foreground" Value="White" />
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource NavButtonHoverBackground}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource DisabledText}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>